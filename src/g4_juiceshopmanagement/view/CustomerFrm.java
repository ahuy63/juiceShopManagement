/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package g4_juiceshopmanagement.view;

import g4_juiceshopmanagement.controller.AccountDAO;
import g4_juiceshopmanagement.controller.CustomerDAO;
import g4_juiceshopmanagement.model.Account;
import g4_juiceshopmanagement.model.Customer;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahuy96
 */
public class CustomerFrm extends javax.swing.JFrame {

    /**
     * Creates new form CustomerFrm
     */
    public CustomerFrm() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_customer_username = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_customer_fullname = new javax.swing.JTextField();
        txt_customer_phone = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_customer_dob = new javax.swing.JTextField();
        btn_customer_add = new javax.swing.JButton();
        btn_customer_save = new javax.swing.JButton();
        btn_customer_update = new javax.swing.JButton();
        btn_customer_delete = new javax.swing.JButton();
        btn_customer_exit = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txt_customer_email = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_customer_address = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_customer_accountID = new javax.swing.JTextField();
        txt_customer_password = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_customer = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("Customer Management");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Customer info: "));

        jLabel2.setText("Username: ");

        jLabel3.setText("Password: ");

        jLabel4.setText("Full name: ");

        jLabel5.setText("Email: ");

        jLabel6.setText("Phone: ");

        btn_customer_add.setText("Add");
        btn_customer_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_customer_addActionPerformed(evt);
            }
        });

        btn_customer_save.setText("Save");
        btn_customer_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_customer_saveActionPerformed(evt);
            }
        });

        btn_customer_update.setText("Update");
        btn_customer_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_customer_updateActionPerformed(evt);
            }
        });

        btn_customer_delete.setText("Delete");
        btn_customer_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_customer_deleteActionPerformed(evt);
            }
        });

        btn_customer_exit.setText("Exit");
        btn_customer_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_customer_exitActionPerformed(evt);
            }
        });

        jLabel7.setText("Date of Birth:");

        jLabel8.setText("Address: ");

        jLabel9.setText("AccountID:");

        txt_customer_accountID.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(btn_customer_add, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_customer_save, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_customer_update, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_customer_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_customer_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_customer_accountID, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                            .addComponent(txt_customer_username)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_customer_fullname, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                            .addComponent(txt_customer_password))))
                                .addGap(48, 48, 48)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_customer_phone)
                                    .addComponent(txt_customer_dob)
                                    .addComponent(txt_customer_email)
                                    .addComponent(txt_customer_address, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))))))
                .addContainerGap(218, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_customer_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txt_customer_accountID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_customer_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_customer_dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txt_customer_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_customer_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_customer_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_customer_fullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_customer_add)
                    .addComponent(btn_customer_save)
                    .addComponent(btn_customer_update)
                    .addComponent(btn_customer_delete)
                    .addComponent(btn_customer_exit))
                .addContainerGap())
        );

        tbl_customer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Username", "Password", "Fullname", "Email", "Phone", "DoB", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_customer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_customerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_customer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private static boolean typeAction;

    private void loadData() {
        DefaultTableModel model = (DefaultTableModel) tbl_customer.getModel();
        CustomerDAO customerDAO = new CustomerDAO();
        ArrayList<Customer> list = customerDAO.getAll();
        int count = model.getRowCount();
        while (count > 0) {
            model.removeRow(count - 1);
            count--;
        }
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        for (Customer item : list) {
            String dob = sdf.format(item.getDoB());
            Object[] row = {
                item.getAccountID(),
                item.getAccount().getUsername(),
                item.getAccount().getPassword(),
                item.getAccount().getFullName(),
                item.getAccount().getEmail(),
                item.getAccount().getPhone(),
                dob,
                item.getAddress(),
                item.getAccount().getAvatar()
            };
            model.addRow(row);
        }
    }

    public void changeStatusButton(boolean value) {
        btn_customer_add.setEnabled(value);
        btn_customer_update.setEnabled(value);
        btn_customer_delete.setEnabled(value);
        btn_customer_save.setEnabled(!value);
    }

    private void resetForm() {
        txt_customer_username.setText("");
        txt_customer_password.setText("");
        txt_customer_fullname.setText("");
        txt_customer_email.setText("");
        txt_customer_phone.setText("");
        txt_customer_dob.setText("");
        txt_customer_accountID.setText("");
        txt_customer_address.setText("");
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        loadData();
    }//GEN-LAST:event_formWindowOpened

    private void btn_customer_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_customer_addActionPerformed
        // TODO add your handling code here:
        typeAction = true;
        resetForm();
        changeStatusButton(false);
    }//GEN-LAST:event_btn_customer_addActionPerformed

    private void btn_customer_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_customer_updateActionPerformed
        // TODO add your handling code here:
        typeAction = false;
        changeStatusButton(false);
    }//GEN-LAST:event_btn_customer_updateActionPerformed

    private void btn_customer_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_customer_exitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_customer_exitActionPerformed

    private void btn_customer_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_customer_saveActionPerformed
        // TODO add your handling code here:
        CustomerDAO customerDAO = new CustomerDAO();
        AccountDAO accountDAO = new AccountDAO();

        String username = txt_customer_username.getText();
        String password = txt_customer_password.getText();
        String fullname = txt_customer_fullname.getText();
        String email = txt_customer_email.getText();
        String phone = txt_customer_phone.getText();

        String address = txt_customer_address.getText();
        if (typeAction) {
            if (username.length() == 0 || password.length() == 0 || email.length() == 0) {
                JOptionPane.showMessageDialog(this, "Please enter full info!!!");
            } else if (accountDAO.isExist_Username(username)) {
                JOptionPane.showMessageDialog(this, "Username is existed!!!");
            } else {
                Account account = new Account();
                account.setUsername(username);
                account.setPassword(password);
                account.setFullName(fullname);
                account.setEmail(email);
                account.setPhone(phone);
                account.setAvatar(account.getUsername() + ".jpg");

                Customer customer = new Customer();
                customer.setAccountID(accountDAO.add(account));
                try {
                    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    Date dob = new Date();
                    if (!txt_customer_dob.getText().equals("")) {
                        dob = sdf.parse(txt_customer_dob.getText());
                    }
                    customer.setDoB(dob);
                } catch (Exception e) {
                }

                customer.setAddress(address);
                if (customerDAO.add(customer)) {
                    loadData();
                } else {
                    JOptionPane.showMessageDialog(this, "Add failed!!!");
                }
            }
            changeStatusButton(true);
        } else {
            if (username.length() == 0 || password.length() == 0 || email.length() == 0) {
                JOptionPane.showMessageDialog(this, "Please enter full info!!!");
            } else {
                Account account = new Account();
                account.setUsername(username);
                account.setPassword(password);
                account.setFullName(fullname);
                account.setEmail(email);
                account.setPhone(phone);
                account.setAvatar(account.getUsername() + ".jpg");
                account.setID(Integer.parseInt(txt_customer_accountID.getText()));
                if (accountDAO.update(account)) {
                    Customer customer = new Customer();

                    customer.setAccountID(Integer.parseInt(txt_customer_accountID.getText()));

                    try {
                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                        Date dob = new Date();
                        if (!txt_customer_dob.getText().equals("")) {
                            dob = sdf.parse(txt_customer_dob.getText());
                        }
                        customer.setDoB(dob);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Invalid DoB!!!");
                    }

                    customer.setAddress(address);
                    if (customerDAO.update(customer)) {
                        loadData();
                    } else {
                        JOptionPane.showMessageDialog(this, "Update failed!!!");
                    }
                }

            }
            changeStatusButton(true);
        }
        txt_customer_username.setText("");
        txt_customer_password.setText("");
        txt_customer_fullname.setText("");
        txt_customer_email.setText("");
        txt_customer_dob.setText("");
        txt_customer_phone.setText("");
        txt_customer_address.setText("");
    }//GEN-LAST:event_btn_customer_saveActionPerformed

    private void tbl_customerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_customerMouseClicked
        // TODO add your handling code here:
        int index = tbl_customer.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tbl_customer.getModel();
        txt_customer_accountID.setText(String.valueOf(model.getValueAt(index, 0)));
        txt_customer_username.setText(String.valueOf(model.getValueAt(index, 1)));
        txt_customer_password.setText(String.valueOf(model.getValueAt(index, 2)));
        txt_customer_fullname.setText(String.valueOf(model.getValueAt(index, 3)));
        txt_customer_email.setText(String.valueOf(model.getValueAt(index, 4)));
        txt_customer_phone.setText(String.valueOf(model.getValueAt(index, 5)));
        txt_customer_dob.setText(String.valueOf(model.getValueAt(index, 6)));
        txt_customer_address.setText(String.valueOf(model.getValueAt(index, 7)));
    }//GEN-LAST:event_tbl_customerMouseClicked

    private void btn_customer_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_customer_deleteActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "Confirm delete?", "Warning", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            int accountID = Integer.parseInt(txt_customer_accountID.getText());
            CustomerDAO customerDAO = new CustomerDAO();
            AccountDAO accountDAO = new AccountDAO();
            if (customerDAO.delete(accountID)) {
                if (accountDAO.delete(accountID)) {
                    loadData();
                    resetForm();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Delete failed!!!");
            }
        }
    }//GEN-LAST:event_btn_customer_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_customer_add;
    private javax.swing.JButton btn_customer_delete;
    private javax.swing.JButton btn_customer_exit;
    private javax.swing.JButton btn_customer_save;
    private javax.swing.JButton btn_customer_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tbl_customer;
    private javax.swing.JTextField txt_customer_accountID;
    private javax.swing.JTextField txt_customer_address;
    private javax.swing.JTextField txt_customer_dob;
    private javax.swing.JTextField txt_customer_email;
    private javax.swing.JTextField txt_customer_fullname;
    private javax.swing.JPasswordField txt_customer_password;
    private javax.swing.JTextField txt_customer_phone;
    private javax.swing.JTextField txt_customer_username;
    // End of variables declaration//GEN-END:variables
}
